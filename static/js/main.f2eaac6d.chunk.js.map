{"version":3,"sources":["no-poster.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header/Header.js","Components/Header/index.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","Helmet","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","upcoming","popular","error","loading","Loader","map","movie","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","tvApi","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","console","log","a","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","index","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f2eaac6d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no-poster.25f2b569.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    /* not want the margin bottom for the last child */\n    :not(:last-child){\n        margin-bottom: 50px;\n    }\n`;\n\nconst Title = styled.span`\n    font-size:16px;\n    font-weight:600;\n    margin-bottom:25px;\n`;\n\nconst Grid = styled.div`\n    margin-top: 25px;\n    display:grid;\n    grid-template-columns:repeat(auto-fill, 125px);\n    grid-gap: 25px;\n`;\n\n\nconst Section = ({title, children}) => (\n    <Container>\n        <Title>{title}</Title>\n        <Grid>{children}</Grid>\n    </Container>\n);\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n}\n\nexport default Section;","import React from \"react\";\nimport styled from \"styled-components\";\nimport {Helmet} from \"react-helmet\";\n\nconst Container = styled.div`\n    height: 100vh;\n    width: 100vh;\n    display: flex;\n    /* justify-content: center; */\n    font-size: 28px;\n    margin-top: 20px;\n    margin-left: 10px;\n    opacity: 0.7;\n`;\n\nexport default () => <Container>\n     <Helmet>\n        <title>Loading | Netflix</title>\n    </Helmet> \n    <span role = \"img\" aria-label=\"Loading\">\n        Loading...\n    </span>\n</Container>\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    width:100vw;\n    display: flex;\n    justify-content: center;\n`;\nconst Text = styled.span`\n    color: ${props => props.color};\n`;\nconst Message = ({text, color}) => (\n<Container>\n    <Text color = {color}>{text}</Text>\n</Container>);\n\nMessage.propTypes ={\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired\n}\nexport default Message;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Link} from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    font-size:12px;\n`;\n\nconst Image = styled.div`\n    background-image: url(\n        ${props => props.bgUrl});\n    height: 180px;\n    background-size: cover;\n    border-radius: 4px;\n    background-position: center center;\n    transition: opacity 0.2s linear;\n`;\n\nconst Rating = styled.span`\n    top: 160px;\n    right: 5px;\n    position: absolute;\n    opacity: 0;\n    transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n    margin-bottom: 5px;\n    position: relative;\n    &:hover{\n        ${Image}{\n            opacity: 0.3;\n        }\n        ${Rating}{\n            opacity: 1;\n        }\n    }\n\n`;\n\nconst Title = styled.span`\n    display:block;\n    margin-bottom: 3px;\n    margin-top:3px;\n`;\n\nconst Year = styled.span`\n    font-size: 10px;\n    color: rgba(255,255,255,0.5);\n`; \n\n\nconst Poster = ({id, \nimageUrl, \ntitle, \nrating, \nyear, \nisMovie = false}) => (\n    <Link to={isMovie? `/movie/${id}` : `/show/${id}`}>\n        <Container>\n            <ImageContainer>\n                <Image bgUrl = {imageUrl? `https://image.tmdb.org/t/p/w300${imageUrl}`: \n                require(\"../no-poster.png\")\n                } \n                />\n                <Rating><span role=\"img\" aria-label=\"rating\">\n                    ⭐\n                </span>{\" \"}\n                {rating}/10</Rating>\n                <Title>{title.length > 18 ? `${title.substring(0,15)}...` : title}</Title>\n                <Year>{year}</Year>\n            </ImageContainer>\n        </Container>\n    </Link>\n);\n\nPoster.propTypes = {\n    id: PropTypes.number.isRequired,\n    imageUrl: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    rating: PropTypes.number,\n    year: PropTypes.string,\n    isMovie: PropTypes.bool\n};\n\nexport default Poster; ","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport {Helmet} from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Error from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n    padding: 0px 20px;\n    padding-top: 20px;\n`;\n\nconst HomePresenter = ({nowPlaying, \n    upcoming, \n    popular, \n    error, \n    loading}) => loading? (\n    <Loader />\n    ) : (\n    <Container>\n        <Helmet>\n            <title>Movies | Netflix</title>\n        </Helmet>\n    {nowPlaying && \n    nowPlaying.length > 0 && \n    (<Section title=\"Now Playing\">\n        {nowPlaying.map(movie => \n        <Poster id={movie.id} \n        imageUrl={movie.poster_path} \n        title={movie.original_title} \n        rating={movie.vote_average}\n        year={movie.release_date && movie.release_date.substring(0,4)}\n        isMovie={true}/>\n        )}\n    </Section>\n    )}\n    {upcoming && \n    upcoming.length > 0 && \n    (<Section title=\"Upcoming Movies\">\n        {upcoming.map(movie => \n        <Poster id={movie.id} \n        imageUrl={movie.poster_path} \n        title={movie.original_title} \n        rating={movie.vote_average}\n        year={movie.release_date && movie.release_date.substring(0,4)}\n        isMovie={true}/>\n        )}\n    </Section>\n    )}\n\n    {popular && \n    popular.length > 0 && \n    (<Section title=\"Popular Movies\">\n        {popular.map(movie => \n        <Poster id={movie.id} \n        imageUrl={movie.poster_path} \n        title={movie.original_title} \n        rating={movie.vote_average}\n        year={movie.release_date && movie.release_date.substring(0,4)}\n        isMovie={true}/>\n        )}\n    </Section>\n    )}\n    {error && <Error text = {error} color = \"#e74c3c\" />}\n    </Container>\n    );\n\nHomePresenter.propTypes = {\n    nowPlaying: PropTypes.array,\n    upcoming: PropTypes.array,\n    popular: PropTypes.array,\n    error: PropTypes.string,\n    loading: PropTypes.bool.isRequired\n};\n\nexport default HomePresenter;","import axios from \"axios\";\n\n//for axios, there's a bug with latter versions. Install @0.18.1 by \"npm i axios@0.18.1\"\nconst api = axios.create({\n    baseURL: \"https://api.themoviedb.org/3/\",\n    params: {\n        api_key: \"908e5accd18cc91ae9bbf0be55fd431e\",\n        language: \"en-US\"\n    } \n});\n\nexport const moviesApi = {\n    nowPlaying: () => api.get(\"movie/now_playing\"),\n    upcoming: () => api.get(\"movie/upcoming\"),\n    popular: () => api.get(\"movie/popular\"),\n    movieDetail: (id) => api.get(`movie/${id}`, { \n        params: {\n            append_to_response: \"videos\"\n        }\n    }),\n    search: (term) => api.get(\"search/movie\", {\n        params: {\n            // query: encodeURIComponent(term). This api already does encoding for you. \n            query: (term)\n        }\n    })\n};\n\nexport const tvApi = {\n    topRated: () => api.get(\"tv/top_rated\"),\n    popular: () => api.get(\"tv/popular\"),\n    airingToday: () => api.get(\"tv/airing_today\"),\n    showDetail: (id) => api.get(`tv/${id}`, { \n        params: {\n            append_to_response: \"videos\"\n        }\n    }),\n    search: (term) => api.get(\"search/tv\", {\n        params: {\n         // query: encodeURIComponent(term)\n          query: (term)          \n        }\n    })\n};\n\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"../../api\";\n\nexport default class extends React.Component{\n    state = {\n        nowPlaying: null,\n        upcoming: null,\n        popular: null,\n        error: null,\n        loading: true\n    };\n\n    //here, include get apis, etc. \n    async componentDidMount(){\n        //call api methods here. can either make diff functions outside then include, or in here\n        try{\n            //await => makes javascript wait until data is returned. \n            const {data: {results: nowPlaying}\n            } = await moviesApi.nowPlaying(); \n\n            const {data: {results: upcoming}\n            } = await moviesApi.upcoming();\n\n            const {data: {results: popular}\n            } = await moviesApi.popular();\n         \n            this.setState({\n                nowPlaying,\n                upcoming,\n                popular\n            });\n        } catch {\n            this.setState({\n                error: \"Can't find movie information.\"\n            });\n        } finally {\n            this.setState({\n                loading: false\n            });\n        }\n    }\n\n    render() {\n        const{ nowPlaying, upcoming, popular, error, loading } = this.state;\n       \n        return (\n            <HomePresenter\n                nowPlaying = {nowPlaying}\n                upcoming = {upcoming}\n                popular = {popular}\n                error = {error} \n                loading = {loading}\n            />\n        );\n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport {Helmet} from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Error from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\n\nconst TVPresenter = ({topRated,\n    popular, \n    airingToday,\n     error, \n     loading}) => loading? (<Loader />\n    ) : (\n         <Container>\n             <Helmet>\n                 <title>TV Shows | Netflix</title>\n             </Helmet>\n             {topRated && topRated.length > 0 && (\n             <Section title = \"Top Rated Shows\">\n                {topRated.map(show => \n                     <Poster id={show.id} \n                     imageUrl={show.poster_path} \n                     title={show.original_name} \n                     rating={show.vote_average}\n                     year={show.first_air_date && show.first_air_date.substring(0,4)}\n                     isMovie={false}/>\n                )}\n            </Section>)}\n\n            {popular && popular.length > 0 && (\n             <Section title = \"Popular Shows\">\n                {popular.map(show => \n                    <Poster id={show.id} \n                    imageUrl={show.poster_path} \n                    title={show.original_name} \n                    rating={show.vote_average}\n                    year={show.first_air_date && show.first_air_date.substring(0,4)}\n                    isMovie={false}/>\n                )}\n            </Section>)}\n\n            {airingToday && airingToday.length > 0 && (\n             <Section title = \"Airing Today\">\n                {airingToday.map(show => \n                    <Poster id={show.id} \n                    imageUrl={show.poster_path} \n                    title={show.original_name} \n                    rating={show.vote_average}\n                    year={show.first_air_date && show.first_air_date.substring(0,4)}\n                    isMovie={false}/>\n                )}\n            </Section>)}\n            {error && <Error text = {error} color = \"#e74c3c\" />}\n         </Container>\n     );\n\nTVPresenter.propTypes = {\n    topRated: PropTypes.array,\n    popular: PropTypes.array,\n    airingToday: PropTypes.array,\n    error: PropTypes.string,\n    loading: PropTypes.bool.isRequired\n};\n\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;","import React from 'react';\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from '../../api';\n\nexport default class extends React.Component{\n    state = {\n        topRated: null,\n        popular: null,\n        airingToday: null,\n        error: null,\n        loading: true\n    };\n\n    async componentDidMount(){\n        try {\n            const {data: {results: topRated}\n            } = await tvApi.topRated();\n            const {data: {results: popular}\n            } = await tvApi.popular();\n            const {data: {results: airingToday}\n            } = await tvApi.airingToday();\n\n            this.setState({\n                topRated,\n                popular,\n                airingToday\n            })\n\n        } catch {\n            this.setState({\n                error: \"Can't find TV information.\"\n            })\n        } finally {\n            this.setState({\n                loading: false\n            })\n        }\n    };\n\n    render() {\n        const { topRated, popular, airingToday, error, loading} = this.state;\n        return (<TVPresenter\n            topRated = {topRated}\n            popular = {popular}\n            airingToday = {airingToday}\n            error = {error}\n            loading = {loading}\n        />);\n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport {Helmet} from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Error from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n    padding: 0px 20px;\n`;\n\nconst Form = styled.form`\n    margin-bottom:50px;\n    width:100%;\n`;\n\nconst Input = styled.input`\n    all:unset;\n    font-size: 28px;\n    width:100%;\n`;\n\n\nconst SearchPresenter = ({\n    movieResults, \n    tvResults, \n    searchTerm, \n    error, \n    loading,\n    handleSubmit,\n    updateTerm}) => <Container>\n        <Form onSubmit={handleSubmit}>\n            <Input \n            placeholder=\"Search Movies or TV Shows...\" \n            value = {searchTerm} \n            onChange = {updateTerm}/> \n        </Form>\n        {loading ? <Loader/> : (\n            <>\n                <Helmet>\n                    <title>Search | Netflix</title>\n                </Helmet>\n                {movieResults && movieResults.length > 0 && \n                (<Section title=\"Movie Results\">\n                    {movieResults.map(movie => (\n                         <Poster id={movie.id} \n                         imageUrl={movie.poster_path} \n                         title={movie.original_title} \n                         rating={movie.vote_average}\n                         year={movie.release_date && movie.release_date.substring(0,4)}\n                         isMovie={true}/>\n                        ))}                   \n                </Section>)}\n\n                {tvResults && tvResults.length > 0 && \n                (<Section title=\"TV Show Results\">\n                    {tvResults.map(show => (\n                        <Poster id={show.id} \n                        imageUrl={show.poster_path} \n                        title={show.original_name} \n                        rating={show.vote_average}\n                        year={show.first_air_date && show.first_air_date.substring(0,4)}\n                        isMovie={false}/>\n                    ))}                   \n                </Section>)}\n            </>\n        )}\n        {error && <Error text = {error} color = \"#e74c3c\" />}\n        {tvResults && movieResults && \n        tvResults.length === 0 && \n        movieResults.length === 0 && \n        <Error text = \"Nothing Found\" color = \"#95a5a6\" />}\n    </Container>;\n\nSearchPresenter.propTypes = {\n    movieResults: PropTypes.array,\n    tvResults: PropTypes.array,\n    searchTerm: PropTypes.string,\n    error: PropTypes.string,\n    loading: PropTypes.bool.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;","import React from 'react';\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi } from \"../../api\";\nimport { tvApi } from \"../../api\";\n\nexport default class extends React.Component{\n    state = {\n        movieResults: null,\n        tvResults: null,\n        searchTerm: \"\",\n        error: null,\n        loading: false\n    };\n\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const { searchTerm } = this.state; \n        if(searchTerm !== \"\"){\n            this.searchByTerm();\n        }\n    };\n\n    updateTerm = (event) => {\n        const { \n            target : { value } \n        } = event;\n        console.log(value);\n        this.setState({\n            searchTerm: value\n        })   \n        \n    };\n\n    searchByTerm = async (term) => {\n        const { searchTerm } = this.state; \n        this.setState({ loading: true})\n        try{\n            const {data: {results: movieResults}} = await moviesApi.search(searchTerm)\n            const {data: {results: tvResults}} = await tvApi.search(searchTerm);\n\n            this.setState({\n                movieResults,\n                tvResults,\n                \n            });\n        } catch{\n            this.setState({\n                error: \"Can't find results.\"\n            })\n        }finally {\n            this.setState({\n                loading: false\n            })\n        }\n    }\n    render() {\n        const { movieResults,\n             tvResults, \n             searchTerm, \n             error, \n             loading,\n             updateTerm} = this.state;\n       \n        return (<SearchPresenter\n            movieResults = {movieResults}\n            tvResults = {tvResults}\n            searchTerm = {searchTerm}\n            error = {error}\n            loading = {loading}\n            handleSubmit={this.handleSubmit}\n            updateTerm = {this.updateTerm}\n        />);\n    }\n}","import React from 'react';\nimport {Link, withRouter} from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n    color: white;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 50px;\n    display: flex;\n    align-items: center;\n    padding: 0px 10px;\n    background-color: rgba(20,20,20,0.8);\n    z-index: 10;\n    box-shadow: 0px 1px 5px 2px rgba(0,0,0,0.8);\n`;\n\nconst List = styled.ul`\n    display:flex;\n`;\n\nconst Item = styled.li `\n    width: 80px;\n    height: 50px;\n    text-align: center;\n    border-bottom: 3px solid ${props => props.current ? \"#3498db\" : \"transparent\"};\n    transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)` \n    height: 50px;\n    display: flex;\n    align-items:center;\n    justify-content:center;\n\n`;\n\nexport default withRouter(({location: {pathname}}) => (\n<Header>\n    {console.log(pathname)}\n    <List>\n        <Item current={pathname === \"/\"}>\n            <SLink to=\"/\">Movies</SLink>\n        </Item>\n        <Item current={pathname === \"/tv\"}>\n            <SLink to=\"/tv\">TV</SLink>\n        </Item>\n        <Item current={pathname === \"/search\"}>\n            <SLink to=\"/search\">Search</SLink>\n        </Item>\n    </List>\n</Header>\n)); ","import Header from \"./Header\";\n\nexport default Header;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport {Helmet} from \"react-helmet\";\nimport Loader from \"Components/Loader\";\n\nconst Container = styled.div`\n    height: calc(100vh - 50px);\n    width: 100%;  \n    position: relative;\n    padding: 50px;\n`;\n\n\nconst Backdrop = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-image: url(${props => props.bgImage});\n    background-position: center center;\n    background-size: cover;\n    filter: blur(3px);\n    opacity: 0.5;\n    \n`;\n\nconst Content = styled.div`\n    display: flex; \n    width: 100%;\n    position: relative;\n    z-index: 1;\n    height: 100%;\n`;\n\nconst Cover = styled.div`\n    width: 30%; \n    background-image: url(${props => props.bgImage});\n    background-position: center center;\n    background-size: cover;\n    height: 100%;\n    border-radius: 5px;\n`;\n\nconst Data = styled.div`\n    width: 70%;\n    margin-left: 10px;\n`;\n\n\nconst Title = styled.h3`\n    font-size: 32px;\n`;\nconst ItemContainer = styled.div`\n    margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n    margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n    font-size: 12px;\n    opacity: 0.7;\n    line-height:1.3;\n    width: 60%;\n`;\n\nconst DetailPresenter = ({result, error, loading}) => (\n    loading ? <Loader /> : \n    <Container>\n        <Helmet> \n            <title>Details | Netflix</title>\n        </Helmet>\n        <Backdrop bgImage = {`https://image.tmdb.org/t/p/original${result.backdrop_path}`}/>\n        <Content>\n            <Cover \n            bgImage = {result.poster_path? `https://image.tmdb.org/t/p/original${result.poster_path}` : \n            require(\"../../no-poster.png\")}/>\n            <Data>\n                <Title>{result.original_title? result.original_title : result.original_name}</Title>\n                <ItemContainer>\n                    <Item>{result.release_date? \n                    result.release_date.substring(0,4) : \n                    result.first_air_date.substring(0,4)}</Item>\n                    <Divider>•</Divider>\n                    <Item>{result.runtime? \n                        result.runtime : \n                        result.episode_run_time[0]} min\n                    </Item> \n                    <Divider>•</Divider>\n                    <Item>{result.genres &&\n                        result.genres.map((genres,index) => \n                        index ===result.genres.length-1? \n                        genres.name : `${genres.name} / `\n                        )}\n                    </Item>\n                </ItemContainer>\n                <Overview>{result.overview}</Overview>\n            </Data>\n        </Content>\n    </Container>\n);\n\n\nDetailPresenter.propTypes = {\n    result: PropTypes.object, \n    error: PropTypes.string,\n    loading: PropTypes.bool.isRequired\n};\n\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;","import React from 'react';\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi } from \"../../api\";\nimport { tvApi } from \"../../api\";\n\nexport default class extends React.Component{\n    constructor(props){\n        super(props);\n        const {\n            location: {pathname}\n        } = props;\n        this.state = {\n            result: null,\n            error: null,\n            loading: true,\n            isMovie: pathname.includes(\"/movie/\")\n        };\n    }\n\n    async componentDidMount(){\n        const {match: \n            {params: \n                {id}\n            }, \n            history: { push }   \n        } = this.props;\n        const { isMovie } = this.state;\n        const parsedId = parseInt(id);\n        if(isNaN(parsedId)){\n            push(\"/\");\n        }\n\n        let result = null;     \n        try{\n         if (isMovie){\n           ({data: result} = await moviesApi.movieDetail(parsedId));\n            \n        }else{\n            ({data:result} = await tvApi.showDetail(parsedId));\n        }\n         console.log(result);\n        } catch {\n                this.setState({error : \"Can't find anything.\"});\n        } finally {\n                this.setState({ loading: false, result});\n        }\n    }\n    \n    render() {    \n        const { result, error, loading} = this.state;\n        return (<DetailPresenter\n            result = {result}\n            error = {error}\n            loading = {loading}\n        />);\n    }\n}","import React from \"react\";\nimport {BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\n//if use HashRouter, # appears in link \nimport Home from \"../Routes/Home\";\nimport TV from \"../Routes/TV\";\nimport Search from \"../Routes/Search\";\nimport Header from \"Components/Header\";\nimport Detail from \"../Routes/Detail\";\n\nexport default () => (\n    <Router>\n        <>\n        <Header />\n        <Switch>\n            <Route path=\"/\" exact component={Home}></Route>\n            <Route path=\"/tv\"  exact component={TV}></Route>    \n            <Route path=\"/search\"  component={Search}></Route>\n            <Route path=\"/movie/:id\" component={Detail}></Route>\n            <Route path=\"/show/:id\" component={Detail}></Route>\n            <Redirect from=\"*\" to=\"/\" />\n        </Switch>\n        </>\n    </Router>\n);\n\n ","import {createGlobalStyle} from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color: inherit;\n\n    }\n    *{\n        box-sizing: border-box; \n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size: 14px; \n        background-color: rgba(20,20,20,1);\n        color:white;\n        padding-top: 50px;\n    }\n`;\n\nexport default globalStyles;","import React, { Component } from 'react';\nimport Router from \"./Router\";\nimport GlobalStyles from \"./GlobalStyles\";\n\n\nclass App extends Component {\n  render() {\n    return(\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nReactDOM.render(<App />, \n  document.getElementById('root')\n);\n"],"sourceRoot":""}